//坑，未填，字库不成功
#include<Arduino.h>
#include<LiquidCrystal.h>
const int rs=3,en=4,d4=5,d5=6,d6=7,d7=8;
LiquidCrystal lcd(rs,en,d4,d5,d6,d7);
//以下字库由二进制转为十六进制
uint8_t ren[8]={0x02,0x02,0x04,0x04,0x04,0x0A,0x0A,0x11,};//“人”字库
uint8_t ci[8]={0X04,0X17,0X15,0X02,0X0A,0X15,0X15,0X15,};//“次”字库
int nop=0;  //人次的变量

uint8_t G1[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t G4[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t G2[8]={0x1F,0x1F,0x1F,0x00,0x00,0x07,0x07,0x07,};
uint8_t G5[8]={0x00,0x00,0x00,0x00,0x07,0x07,0x1F,0x1F,};
uint8_t G3[8]={0x18,0x18,0x18,0x00,0x00,0x1F,0x1F,0x1F,};
uint8_t G6[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};

uint8_t R1[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t R4[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t R2[8]={0x1F,0x1F,0x00,0x00,0x1F,0x1F,0x10,0x10,};
uint8_t R5[8]={0x18,0x0C,0x06,0x03,0x01,0x00,0x00,0x00,};
uint8_t R3[8]={0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,};
uint8_t R6[8]={0x00,0x00,0x00,0x00,0x10,0x18,0x0C,0x04,};

uint8_t O1[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t O4[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t O2[8]={0x1F,0x1F,0x1F,0x00,0x00,0x00,0x00,0x00,};
uint8_t O5[8]={0x00,0x00,0x00,0x00,0x00,0x1F,0x1F,0x1F,};
uint8_t O3[8]={0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,};
uint8_t O6[8]={0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,};

uint8_t U1[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t U4[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x03,0x01,};
uint8_t U2[8]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};
uint8_t U5[8]={0x00,0x00,0x00,0x00,0x00,0x1F,0x1F,0x1F,};
uint8_t U3[8]={0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,};
uint8_t U6[8]={0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x18,0x10,};

uint8_t P1[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t P4[8]={0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,};
uint8_t P2[8]={0x1F,0x1F,0x00,0x00,0x00,0x00,0x1F,0x1F,};
uint8_t P5[8]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};
uint8_t P3[8]={0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,};
uint8_t P6[8]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};

uint8_t n1[8]={0x1F,0x1F,0x03,0x03,0x03,0x03,0x1F,0x1F,};
uint8_t n2[8]={0x03,0x03,0x03,0x03,0x03,0x03,0x1F,0x1F,};

void setup() {
  pinMode(2,INPUT); 
  
  lcd.begin(16,2);      //红外开关数据端口
  lcd.createChar(0,ren);//创建字符
  lcd.createChar(1,ci); //创建字符
  lcd.createChar(2,G1);
  lcd.createChar(3,G2);
  lcd.createChar(4,G3);
  lcd.createChar(5,G4);
  lcd.createChar(6,G5);
  lcd.createChar(7,G6);
  lcd.createChar(8,R1);
  lcd.createChar(9,R2);
  lcd.createChar(10,R3);
  lcd.createChar(11,R4);
  lcd.createChar(12,R5);
  lcd.createChar(13,R6);
  lcd.createChar(14,O1);
  lcd.createChar(15,O2);
  lcd.createChar(16,O3);
  lcd.createChar(17,O4);
  lcd.createChar(18,O5);
  lcd.createChar(19,O6);
  lcd.createChar(20,U1);
  lcd.createChar(21,U2);
  lcd.createChar(22,U3);
  lcd.createChar(23,U4);
  lcd.createChar(24,U5);
  lcd.createChar(25,U6);
  lcd.createChar(26,P1);
  lcd.createChar(27,P2);
  lcd.createChar(28,P3);
  lcd.createChar(29,P4);
  lcd.createChar(30,P5);
  lcd.createChar(31,P6);
  lcd.createChar(32,n1);
  lcd.createChar(33,n2);
}

void roll(){
  int sn;
  for(sn=0;sn--;){
    lcd.setCursor(sn,0);
    lcd.write((byte)2);
    lcd.write((byte)3);
    lcd.write((byte)4);
    lcd.write((byte)5);
    lcd.write((byte)6);
    lcd.write((byte)7);
    lcd.write((byte)8);
    lcd.write((byte)9);
    lcd.write((byte)10);
    lcd.write((byte)11);
    lcd.write((byte)12);
    lcd.write((byte)13);
    lcd.write((byte)14);
    lcd.write((byte)15);
    lcd.write((byte)16);
    lcd.write((byte)17);
    lcd.write((byte)18);
    lcd.write((byte)19);
    lcd.write((byte)20);
    lcd.write((byte)21);
    lcd.write((byte)22);
    lcd.write((byte)23);
    lcd.write((byte)24);
    lcd.write((byte)25);
    lcd.write((byte)26);
    lcd.write((byte)27);
    lcd.write((byte)28);
    lcd.write((byte)29);
    lcd.write((byte)30);
    lcd.write((byte)31);
    lcd.write((byte)32);
    lcd.write((byte)33);
  }
}

void loop() {
  if(digitalRead(2)==0){
    nop++;
    /*lcd.setCursor(0,0);
    lcd.print(nop);
    lcd.setCursor(14,1);
    lcd.write((byte)0);
    lcd.write((byte)1);*/
    lcd.setCursor(0,0);
    lcd.write((byte)2);
    lcd.write((byte)3);
    lcd.write((byte)4);
    lcd.write((byte)5);
    lcd.write((byte)6);
    lcd.write((byte)7);
    lcd.write((byte)8);
    lcd.write((byte)9);
    lcd.write((byte)10);
    lcd.write((byte)11);
    lcd.write((byte)12);
    lcd.write((byte)13);
    lcd.write((byte)14);
    lcd.write((byte)15);
    lcd.write((byte)16);
    lcd.write((byte)17);
    lcd.write((byte)18);
    lcd.write((byte)19);
    lcd.write((byte)20);
    lcd.write((byte)21);
    lcd.write((byte)22);
    lcd.write((byte)23);
    lcd.write((byte)24);
    lcd.write((byte)25);
    lcd.write((byte)26);
    lcd.write((byte)27);
    lcd.write((byte)28);
    lcd.write((byte)29);
    lcd.write((byte)30);
    lcd.write((byte)31);
    lcd.write((byte)32);
    lcd.write((byte)33);
  }
  /*else{
    roll();
  }
  delay(700);*/
}
